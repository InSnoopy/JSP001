<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.ProdDAO">


	<sql id="searchFrag">
	    <!-- trim방법 뭔지 검색해보기 -->
	    <!-- 앞에 코드가 없는데 AND가 있는 경우 AND를 자동으로 삭제해주기도 한다. -->
	    <trim prefix="WHERE" prefixOverrides="AND">
			<if test="detailCondition neq null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodLgu)">
					AND PROD_LGU = #{detailCondition.prodLgu}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodBuyer)">
					AND PROD_BUYER = #{detailCondition.prodBuyer}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodName)">
					AND INSTR(PROD_NAME, #{detailCondition.prodName}) > 0
				</if>
			</if>
	    </trim>
	</sql>
				
	<select id="selectTotalRecord" resultType="int" parameterType="PagingVO">
    	SELECT COUNT(*)
		FROM PRODVIEW
		<include refid="searchFrag" />
	</select>		
	
<!-- has a관계에서 BUYER_NAME 옆에 buyer.buyerName을 붙일 경우 이걸 생략 가능. has a 관계일 때만! 하지만 이 방법은 편법-->
<!-- 	<resultMap type="ProdVO" id="listMap"> -->
<!-- 		<association property="buyer" javaType="BuyerVO"> -->
<!-- 			<result property="buyerName" column="BUYER_NAME"/> -->
<!-- 		</association> -->
<!-- 	</resultMap> -->
	<select id="selectProdList" resultMap="prodMap" parameterType="PagingVO">
		WITH ORDEREDPROD AS (
		    SELECT PROD_ID, PROD_NAME, PROD_COST, PROD_PRICE,
		       LPROD_NM, 
		       BUYER_NAME "buyer.buyerName",
		       (
		          SELECT COUNT(DISTINCT CART_MEMBER) FROM CART
		          WHERE CART_PROD = PROD_ID
		       )CART_COUNT
		    FROM PRODVIEW
			<include refid="searchFrag" />
		    ORDER BY PROD_LGU, ROWID DESC
		)
		SELECT A.*
		FROM(
		    SELECT ROWNUM RNUM, ORDEREDPROD.*
		    FROM ORDEREDPROD
		) A
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 최종 반환되는 타입을 적어준다. -->
	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<!-- auto매핑을 하는데 id는 auto매핑이 되면 안된다. 매핑구조 이 한줄은 수동으로 작성해야한다. -->
		<id property="prodId" column="PROD_ID"/>
		<association property="buyer" javaType="BuyerVO" autoMapping="true"/>
		<collection property="memberSet" ofType="memberVO" autoMapping="true">
			<!-- set인 경우 중복되는걸 잡기위해 id를 작성해줘야 한다. -->
			<id property="memId" column="MEM_ID"/>
		</collection>
	</resultMap>

	<select id="selectProd" parameterType="String" resultMap="prodMap">
		WITH CARTVIEW AS (
		SELECT CART_PROD,
		MEM_ID,
		MEM_NAME,
		MEM_HP,
		MEM_MAIL,
		MEM_MILEAGE
		FROM CART INNER JOIN MEMBER ON (CART_MEMBER = MEM_ID)
		)
		SELECT
		PROD_ID,
		PROD_NAME,
		PROD_LGU,
		PROD_BUYER,
		PROD_COST,
		PROD_PRICE,
		PROD_SALE,
		PROD_OUTLINE,
		PROD_DETAIL,
		PROD_IMG,
		PROD_TOTALSTOCK,
		PROD_INSDATE,
		PROD_PROPERSTOCK,
		PROD_SIZE,
		PROD_COLOR,
		PROD_DELIVERY,
		PROD_UNIT,
		PROD_QTYIN,
		PROD_QTYSALE,
		PROD_MILEAGE,
		LPROD_NM,
		BUYER_NAME, BUYER_ADD1, BUYER_CHARGER,
		CARTVIEW.*
		FROM
		PRODVIEW LEFT OUTER JOIN CARTVIEW ON (PROD_ID = CART_PROD)
		WHERE PROD_ID = #{prodId}

	</select>
	
   <insert id="insertProd" parameterType="ProdVO">
   	 	<selectKey order="BEFORE" resultType="string" keyProperty="prodId">
	      	SELECT #{prodLgu,jdbcType=CHAR} || 
		   		   LPAD(NVL(TO_NUMBER(SUBSTR(MAX(PROD_ID), 5)), 0)+1, 6, '0')
		    FROM PROD
			WHERE PROD_LGU = #{prodLgu,jdbcType=CHAR}
   	 	</selectKey>
      INSERT INTO PROD (
          PROD_ID,
          PROD_NAME,
          PROD_LGU,
          PROD_BUYER,
          PROD_COST,
          
          PROD_PRICE,
          PROD_SALE,
          PROD_OUTLINE,
          PROD_DETAIL,
          PROD_IMG,
          
          PROD_TOTALSTOCK,
          PROD_INSDATE,
          PROD_PROPERSTOCK,
          PROD_SIZE,
          PROD_COLOR,
          
          PROD_DELIVERY,
          PROD_UNIT,
          PROD_QTYIN,
          PROD_QTYSALE,
          PROD_MILEAGE
      )VALUES(
      		#{prodId}
            , #{prodName,jdbcType=VARCHAR}
            , #{prodLgu,jdbcType=CHAR}
            , #{prodBuyer,jdbcType=CHAR}
            , #{prodCost,jdbcType=NUMERIC}
            
            , #{prodPrice,jdbcType=NUMERIC}
            , #{prodSale,jdbcType=NUMERIC}
            , #{prodOutline,jdbcType=VARCHAR}
            , #{prodDetail,jdbcType=CLOB}
            , #{prodImg,jdbcType=VARCHAR}
            
            , #{prodTotalstock,jdbcType=NUMERIC}
            , #{prodInsdate,jdbcType=DATE}
            , #{prodProperstock,jdbcType=NUMERIC}
            , #{prodSize,jdbcType=VARCHAR}
            , #{prodColor,jdbcType=VARCHAR}
            
            , #{prodDelivery,jdbcType=VARCHAR}
            , #{prodUnit,jdbcType=VARCHAR}
            , #{prodQtyin,jdbcType=NUMERIC}
            , #{prodQtysale,jdbcType=NUMERIC}
            , #{prodMileage,jdbcType=NUMERIC}
       )
		    
   </insert>

</mapper>